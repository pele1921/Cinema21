//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace eKino_API.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class eKinoEntities : DbContext
    {
        public eKinoEntities()
            : base("name=eKinoEntities")
        {
            this.Configuration.LazyLoadingEnabled = false;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Clanovi> Clanovi { get; set; }
        public virtual DbSet<Dvorane> Dvorane { get; set; }
        public virtual DbSet<Filmovi> Filmovi { get; set; }
        public virtual DbSet<FilmoviZanrovi> FilmoviZanrovi { get; set; }
        public virtual DbSet<Korisnici> Korisnici { get; set; }
        public virtual DbSet<KorisniciUloge> KorisniciUloge { get; set; }
        public virtual DbSet<Ocjene> Ocjene { get; set; }
        public virtual DbSet<Projekcije> Projekcije { get; set; }
        public virtual DbSet<Rezervacije> Rezervacije { get; set; }
        public virtual DbSet<Sjedala> Sjedala { get; set; }
        public virtual DbSet<Ulaznice> Ulaznice { get; set; }
        public virtual DbSet<Uloge> Uloge { get; set; }
        public virtual DbSet<Usluge> Usluge { get; set; }
        public virtual DbSet<Zanrovi> Zanrovi { get; set; }
    
        public virtual ObjectResult<Nullable<decimal>> esp_Filmovi_Insert(string naziv, string izvorniNaziv, Nullable<short> godinaIzdavanja, Nullable<short> trajanje, string opis, byte[] slika, byte[] slikaThumb, string trailer)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var izvorniNazivParameter = izvorniNaziv != null ?
                new ObjectParameter("IzvorniNaziv", izvorniNaziv) :
                new ObjectParameter("IzvorniNaziv", typeof(string));
    
            var godinaIzdavanjaParameter = godinaIzdavanja.HasValue ?
                new ObjectParameter("GodinaIzdavanja", godinaIzdavanja) :
                new ObjectParameter("GodinaIzdavanja", typeof(short));
    
            var trajanjeParameter = trajanje.HasValue ?
                new ObjectParameter("Trajanje", trajanje) :
                new ObjectParameter("Trajanje", typeof(short));
    
            var opisParameter = opis != null ?
                new ObjectParameter("Opis", opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var slikaParameter = slika != null ?
                new ObjectParameter("Slika", slika) :
                new ObjectParameter("Slika", typeof(byte[]));
    
            var slikaThumbParameter = slikaThumb != null ?
                new ObjectParameter("SlikaThumb", slikaThumb) :
                new ObjectParameter("SlikaThumb", typeof(byte[]));
    
            var trailerParameter = trailer != null ?
                new ObjectParameter("Trailer", trailer) :
                new ObjectParameter("Trailer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("esp_Filmovi_Insert", nazivParameter, izvorniNazivParameter, godinaIzdavanjaParameter, trajanjeParameter, opisParameter, slikaParameter, slikaThumbParameter, trailerParameter);
        }
    
        public virtual ObjectResult<Filmovi_Result> esp_Filmovi_SelectByNaziv(string naziv)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Filmovi_Result>("esp_Filmovi_SelectByNaziv", nazivParameter);
        }
    
        public virtual ObjectResult<Filmovi_Zanr_Result> esp_Filmovi_SelectByZanr(Nullable<int> zanrID)
        {
            var zanrIDParameter = zanrID.HasValue ?
                new ObjectParameter("ZanrID", zanrID) :
                new ObjectParameter("ZanrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Filmovi_Zanr_Result>("esp_Filmovi_SelectByZanr", zanrIDParameter);
        }
    
        public virtual int esp_Filmovi_Update(Nullable<int> filmID, string naziv, string izvorniNaziv, Nullable<short> godinaIzdavanja, Nullable<short> trajanje, string opis, byte[] slika, byte[] slikaThumb, string trailer)
        {
            var filmIDParameter = filmID.HasValue ?
                new ObjectParameter("FilmID", filmID) :
                new ObjectParameter("FilmID", typeof(int));
    
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var izvorniNazivParameter = izvorniNaziv != null ?
                new ObjectParameter("IzvorniNaziv", izvorniNaziv) :
                new ObjectParameter("IzvorniNaziv", typeof(string));
    
            var godinaIzdavanjaParameter = godinaIzdavanja.HasValue ?
                new ObjectParameter("GodinaIzdavanja", godinaIzdavanja) :
                new ObjectParameter("GodinaIzdavanja", typeof(short));
    
            var trajanjeParameter = trajanje.HasValue ?
                new ObjectParameter("Trajanje", trajanje) :
                new ObjectParameter("Trajanje", typeof(short));
    
            var opisParameter = opis != null ?
                new ObjectParameter("Opis", opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var slikaParameter = slika != null ?
                new ObjectParameter("Slika", slika) :
                new ObjectParameter("Slika", typeof(byte[]));
    
            var slikaThumbParameter = slikaThumb != null ?
                new ObjectParameter("SlikaThumb", slikaThumb) :
                new ObjectParameter("SlikaThumb", typeof(byte[]));
    
            var trailerParameter = trailer != null ?
                new ObjectParameter("Trailer", trailer) :
                new ObjectParameter("Trailer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Filmovi_Update", filmIDParameter, nazivParameter, izvorniNazivParameter, godinaIzdavanjaParameter, trajanjeParameter, opisParameter, slikaParameter, slikaThumbParameter, trailerParameter);
        }
    
        public virtual int esp_FilmoviOsobe_Insert(Nullable<int> filmID, Nullable<int> osobaID)
        {
            var filmIDParameter = filmID.HasValue ?
                new ObjectParameter("FilmID", filmID) :
                new ObjectParameter("FilmID", typeof(int));
    
            var osobaIDParameter = osobaID.HasValue ?
                new ObjectParameter("OsobaID", osobaID) :
                new ObjectParameter("OsobaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_FilmoviOsobe_Insert", filmIDParameter, osobaIDParameter);
        }
    
        public virtual int esp_FilmoviZanrovi_Insert(Nullable<int> filmID, Nullable<int> zanrID)
        {
            var filmIDParameter = filmID.HasValue ?
                new ObjectParameter("FilmID", filmID) :
                new ObjectParameter("FilmID", typeof(int));
    
            var zanrIDParameter = zanrID.HasValue ?
                new ObjectParameter("ZanrID", zanrID) :
                new ObjectParameter("ZanrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_FilmoviZanrovi_Insert", filmIDParameter, zanrIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> esp_Korisnici_Insert(string ime, string prezime, string email, string telefon, string korisnickoIme, string lozinkaSalt, string lozinkaHash, byte[] slika, byte[] slikaThumb)
        {
            var imeParameter = ime != null ?
                new ObjectParameter("Ime", ime) :
                new ObjectParameter("Ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("Prezime", prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("Telefon", telefon) :
                new ObjectParameter("Telefon", typeof(string));
    
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            var lozinkaSaltParameter = lozinkaSalt != null ?
                new ObjectParameter("LozinkaSalt", lozinkaSalt) :
                new ObjectParameter("LozinkaSalt", typeof(string));
    
            var lozinkaHashParameter = lozinkaHash != null ?
                new ObjectParameter("LozinkaHash", lozinkaHash) :
                new ObjectParameter("LozinkaHash", typeof(string));
    
            var slikaParameter = slika != null ?
                new ObjectParameter("Slika", slika) :
                new ObjectParameter("Slika", typeof(byte[]));
    
            var slikaThumbParameter = slikaThumb != null ?
                new ObjectParameter("SlikaThumb", slikaThumb) :
                new ObjectParameter("SlikaThumb", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("esp_Korisnici_Insert", imeParameter, prezimeParameter, emailParameter, telefonParameter, korisnickoImeParameter, lozinkaSaltParameter, lozinkaHashParameter, slikaParameter, slikaThumbParameter);
        }
    
        public virtual ObjectResult<Korisnici_Result> esp_Korisnici_SelectByImePrezime(string imePrezime)
        {
            var imePrezimeParameter = imePrezime != null ?
                new ObjectParameter("ImePrezime", imePrezime) :
                new ObjectParameter("ImePrezime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Korisnici_Result>("esp_Korisnici_SelectByImePrezime", imePrezimeParameter);
        }
    
        public virtual ObjectResult<Korisnici> esp_Korisnici_SelectByKorisnickoIme(string korisnickoIme)
        {
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Korisnici>("esp_Korisnici_SelectByKorisnickoIme", korisnickoImeParameter);
        }
    
        public virtual ObjectResult<Korisnici> esp_Korisnici_SelectByKorisnickoIme(string korisnickoIme, MergeOption mergeOption)
        {
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Korisnici>("esp_Korisnici_SelectByKorisnickoIme", mergeOption, korisnickoImeParameter);
        }
    
        public virtual int esp_Korisnici_Update(Nullable<int> korisnikID, string ime, string prezime, string email, string telefon, string korisnickoIme, string lozinkaSalt, string lozinkaHash, Nullable<bool> status, byte[] slika, byte[] slikaThumb)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            var imeParameter = ime != null ?
                new ObjectParameter("Ime", ime) :
                new ObjectParameter("Ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("Prezime", prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("Telefon", telefon) :
                new ObjectParameter("Telefon", typeof(string));
    
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            var lozinkaSaltParameter = lozinkaSalt != null ?
                new ObjectParameter("LozinkaSalt", lozinkaSalt) :
                new ObjectParameter("LozinkaSalt", typeof(string));
    
            var lozinkaHashParameter = lozinkaHash != null ?
                new ObjectParameter("LozinkaHash", lozinkaHash) :
                new ObjectParameter("LozinkaHash", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var slikaParameter = slika != null ?
                new ObjectParameter("Slika", slika) :
                new ObjectParameter("Slika", typeof(byte[]));
    
            var slikaThumbParameter = slikaThumb != null ?
                new ObjectParameter("SlikaThumb", slikaThumb) :
                new ObjectParameter("SlikaThumb", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Korisnici_Update", korisnikIDParameter, imeParameter, prezimeParameter, emailParameter, telefonParameter, korisnickoImeParameter, lozinkaSaltParameter, lozinkaHashParameter, statusParameter, slikaParameter, slikaThumbParameter);
        }
    
        public virtual int esp_KorisniciUloge_Insert(Nullable<int> korisnikID, Nullable<int> ulogaID)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            var ulogaIDParameter = ulogaID.HasValue ?
                new ObjectParameter("UlogaID", ulogaID) :
                new ObjectParameter("UlogaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_KorisniciUloge_Insert", korisnikIDParameter, ulogaIDParameter);
        }
    
        public virtual int esp_Projekcije_Insert(Nullable<int> filmID, Nullable<int> dvoranaID, Nullable<int> uslugaID, Nullable<System.DateTime> datumProjekcije)
        {
            var filmIDParameter = filmID.HasValue ?
                new ObjectParameter("FilmID", filmID) :
                new ObjectParameter("FilmID", typeof(int));
    
            var dvoranaIDParameter = dvoranaID.HasValue ?
                new ObjectParameter("DvoranaID", dvoranaID) :
                new ObjectParameter("DvoranaID", typeof(int));
    
            var uslugaIDParameter = uslugaID.HasValue ?
                new ObjectParameter("UslugaID", uslugaID) :
                new ObjectParameter("UslugaID", typeof(int));
    
            var datumProjekcijeParameter = datumProjekcije.HasValue ?
                new ObjectParameter("DatumProjekcije", datumProjekcije) :
                new ObjectParameter("DatumProjekcije", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Projekcije_Insert", filmIDParameter, dvoranaIDParameter, uslugaIDParameter, datumProjekcijeParameter);
        }
    
        public virtual ObjectResult<Projekcije_Dvorana_Result> esp_Projekcije_SelectByDvorana(Nullable<int> dvoranaID)
        {
            var dvoranaIDParameter = dvoranaID.HasValue ?
                new ObjectParameter("DvoranaID", dvoranaID) :
                new ObjectParameter("DvoranaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Projekcije_Dvorana_Result>("esp_Projekcije_SelectByDvorana", dvoranaIDParameter);
        }
    
        public virtual ObjectResult<Projekcije_Result> esp_Projekcije_SelectByNazivFilma(string naziv)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Projekcije_Result>("esp_Projekcije_SelectByNazivFilma", nazivParameter);
        }
    
        public virtual ObjectResult<Projekcije_Usluga_Result> esp_Projekcije_SelectByUsluga(Nullable<int> uslugaID)
        {
            var uslugaIDParameter = uslugaID.HasValue ?
                new ObjectParameter("UslugaID", uslugaID) :
                new ObjectParameter("UslugaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Projekcije_Usluga_Result>("esp_Projekcije_SelectByUsluga", uslugaIDParameter);
        }
    
        public virtual int esp_Projekcije_Update(Nullable<int> projekcijaID, Nullable<int> filmID, Nullable<int> dvoranaID, Nullable<int> uslugaID, Nullable<System.DateTime> datumProjekcije)
        {
            var projekcijaIDParameter = projekcijaID.HasValue ?
                new ObjectParameter("ProjekcijaID", projekcijaID) :
                new ObjectParameter("ProjekcijaID", typeof(int));
    
            var filmIDParameter = filmID.HasValue ?
                new ObjectParameter("FilmID", filmID) :
                new ObjectParameter("FilmID", typeof(int));
    
            var dvoranaIDParameter = dvoranaID.HasValue ?
                new ObjectParameter("DvoranaID", dvoranaID) :
                new ObjectParameter("DvoranaID", typeof(int));
    
            var uslugaIDParameter = uslugaID.HasValue ?
                new ObjectParameter("UslugaID", uslugaID) :
                new ObjectParameter("UslugaID", typeof(int));
    
            var datumProjekcijeParameter = datumProjekcije.HasValue ?
                new ObjectParameter("DatumProjekcije", datumProjekcije) :
                new ObjectParameter("DatumProjekcije", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Projekcije_Update", projekcijaIDParameter, filmIDParameter, dvoranaIDParameter, uslugaIDParameter, datumProjekcijeParameter);
        }
    
        public virtual int esp_Zanrovi_Update(Nullable<int> zanrID, string naziv)
        {
            var zanrIDParameter = zanrID.HasValue ?
                new ObjectParameter("ZanrID", zanrID) :
                new ObjectParameter("ZanrID", typeof(int));
    
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Zanrovi_Update", zanrIDParameter, nazivParameter);
        }
    
        public virtual ObjectResult<Clanovi> esp_Clanovi_SelectByNaziv(string korisnickoIme)
        {
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Clanovi>("esp_Clanovi_SelectByNaziv", korisnickoImeParameter);
        }
    
        public virtual ObjectResult<Clanovi> esp_Clanovi_SelectByNaziv(string korisnickoIme, MergeOption mergeOption)
        {
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Clanovi>("esp_Clanovi_SelectByNaziv", mergeOption, korisnickoImeParameter);
        }
    
        public virtual int esp_Clanovi_StatusFalse(Nullable<int> clanID)
        {
            var clanIDParameter = clanID.HasValue ?
                new ObjectParameter("ClanID", clanID) :
                new ObjectParameter("ClanID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Clanovi_StatusFalse", clanIDParameter);
        }
    
        public virtual int esp_Clanovi_StatusTrue(Nullable<int> clanID)
        {
            var clanIDParameter = clanID.HasValue ?
                new ObjectParameter("ClanID", clanID) :
                new ObjectParameter("ClanID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Clanovi_StatusTrue", clanIDParameter);
        }
    
        public virtual ObjectResult<Dvorane> esp_Dvorane_GetDvoranaByNaziv(string naziv)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dvorane>("esp_Dvorane_GetDvoranaByNaziv", nazivParameter);
        }
    
        public virtual ObjectResult<Dvorane> esp_Dvorane_GetDvoranaByNaziv(string naziv, MergeOption mergeOption)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dvorane>("esp_Dvorane_GetDvoranaByNaziv", mergeOption, nazivParameter);
        }
    
        public virtual ObjectResult<Dvorane> esp_Dvorane_SelectByNaziv(string naziv)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dvorane>("esp_Dvorane_SelectByNaziv", nazivParameter);
        }
    
        public virtual ObjectResult<Dvorane> esp_Dvorane_SelectByNaziv(string naziv, MergeOption mergeOption)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dvorane>("esp_Dvorane_SelectByNaziv", mergeOption, nazivParameter);
        }
    
        public virtual int esp_Dvorane_Update(Nullable<int> dvoranaID, string naziv, Nullable<short> kapacitet)
        {
            var dvoranaIDParameter = dvoranaID.HasValue ?
                new ObjectParameter("DvoranaID", dvoranaID) :
                new ObjectParameter("DvoranaID", typeof(int));
    
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var kapacitetParameter = kapacitet.HasValue ?
                new ObjectParameter("Kapacitet", kapacitet) :
                new ObjectParameter("Kapacitet", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Dvorane_Update", dvoranaIDParameter, nazivParameter, kapacitetParameter);
        }
    
        public virtual ObjectResult<esp_Rezervacije_GetByClanovi_Result> esp_Rezervacije_GetByClanovi(string korisnickoIme)
        {
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Rezervacije_GetByClanovi_Result>("esp_Rezervacije_GetByClanovi", korisnickoImeParameter);
        }
    
        public virtual ObjectResult<esp_Rezervacije_GetByKorisnickoIme_Result> esp_Rezervacije_GetByFilmovi(string film)
        {
            var filmParameter = film != null ?
                new ObjectParameter("Film", film) :
                new ObjectParameter("Film", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Rezervacije_GetByKorisnickoIme_Result>("esp_Rezervacije_GetByFilmovi", filmParameter);
        }
    
        public virtual ObjectResult<esp_Rezervacije_GetByKorisnickoIme_Result> esp_Rezervacije_GetByZanrovi(string zanr)
        {
            var zanrParameter = zanr != null ?
                new ObjectParameter("Zanr", zanr) :
                new ObjectParameter("Zanr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Rezervacije_GetByKorisnickoIme_Result>("esp_Rezervacije_GetByZanrovi", zanrParameter);
        }
    
        public virtual ObjectResult<esp_Rezervacije_GetProcesirane_Result> esp_Rezervacije_GetProcesirane(string korisnickoIme)
        {
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Rezervacije_GetProcesirane_Result>("esp_Rezervacije_GetProcesirane", korisnickoImeParameter);
        }
    
        public virtual int esp_Rezervacije_UpdateStatus(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Rezervacije_UpdateStatus", idParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> esp_Osobe_Insert(Nullable<int> vrstaID, string ime, string prezime, byte[] slika, byte[] slikaThumb)
        {
            var vrstaIDParameter = vrstaID.HasValue ?
                new ObjectParameter("VrstaID", vrstaID) :
                new ObjectParameter("VrstaID", typeof(int));
    
            var imeParameter = ime != null ?
                new ObjectParameter("Ime", ime) :
                new ObjectParameter("Ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("Prezime", prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            var slikaParameter = slika != null ?
                new ObjectParameter("Slika", slika) :
                new ObjectParameter("Slika", typeof(byte[]));
    
            var slikaThumbParameter = slikaThumb != null ?
                new ObjectParameter("SlikaThumb", slikaThumb) :
                new ObjectParameter("SlikaThumb", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("esp_Osobe_Insert", vrstaIDParameter, imeParameter, prezimeParameter, slikaParameter, slikaThumbParameter);
        }
    
        public virtual int esp_Clanovi_Insert(string ime, string prezime, string email, Nullable<System.DateTime> datumRegistracije, string korisnickoIme, string lozinkaHash, string lozinkaSalt, byte[] slika, byte[] slikaThumb, Nullable<int> zanrID)
        {
            var imeParameter = ime != null ?
                new ObjectParameter("Ime", ime) :
                new ObjectParameter("Ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("Prezime", prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var datumRegistracijeParameter = datumRegistracije.HasValue ?
                new ObjectParameter("DatumRegistracije", datumRegistracije) :
                new ObjectParameter("DatumRegistracije", typeof(System.DateTime));
    
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            var lozinkaHashParameter = lozinkaHash != null ?
                new ObjectParameter("LozinkaHash", lozinkaHash) :
                new ObjectParameter("LozinkaHash", typeof(string));
    
            var lozinkaSaltParameter = lozinkaSalt != null ?
                new ObjectParameter("LozinkaSalt", lozinkaSalt) :
                new ObjectParameter("LozinkaSalt", typeof(string));
    
            var slikaParameter = slika != null ?
                new ObjectParameter("Slika", slika) :
                new ObjectParameter("Slika", typeof(byte[]));
    
            var slikaThumbParameter = slikaThumb != null ?
                new ObjectParameter("SlikaThumb", slikaThumb) :
                new ObjectParameter("SlikaThumb", typeof(byte[]));
    
            var zanrIDParameter = zanrID.HasValue ?
                new ObjectParameter("ZanrID", zanrID) :
                new ObjectParameter("ZanrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Clanovi_Insert", imeParameter, prezimeParameter, emailParameter, datumRegistracijeParameter, korisnickoImeParameter, lozinkaHashParameter, lozinkaSaltParameter, slikaParameter, slikaThumbParameter, zanrIDParameter);
        }
    
        public virtual ObjectResult<Projekcije_All_Result> esp_Projekcije_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Projekcije_All_Result>("esp_Projekcije_SelectAll");
        }
    
        public virtual int esp_Clanovi_Update(Nullable<int> clanID, string ime, string prezime, string email, string korisnickoIme, string lozinkaSalt, string lozinkaHash, Nullable<bool> status, byte[] slika, byte[] slikaThumb)
        {
            var clanIDParameter = clanID.HasValue ?
                new ObjectParameter("ClanID", clanID) :
                new ObjectParameter("ClanID", typeof(int));
    
            var imeParameter = ime != null ?
                new ObjectParameter("Ime", ime) :
                new ObjectParameter("Ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("Prezime", prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            var lozinkaSaltParameter = lozinkaSalt != null ?
                new ObjectParameter("LozinkaSalt", lozinkaSalt) :
                new ObjectParameter("LozinkaSalt", typeof(string));
    
            var lozinkaHashParameter = lozinkaHash != null ?
                new ObjectParameter("LozinkaHash", lozinkaHash) :
                new ObjectParameter("LozinkaHash", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var slikaParameter = slika != null ?
                new ObjectParameter("Slika", slika) :
                new ObjectParameter("Slika", typeof(byte[]));
    
            var slikaThumbParameter = slikaThumb != null ?
                new ObjectParameter("SlikaThumb", slikaThumb) :
                new ObjectParameter("SlikaThumb", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Clanovi_Update", clanIDParameter, imeParameter, prezimeParameter, emailParameter, korisnickoImeParameter, lozinkaSaltParameter, lozinkaHashParameter, statusParameter, slikaParameter, slikaThumbParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> esp_Projekcije_GetCijena(Nullable<int> projekcijaID)
        {
            var projekcijaIDParameter = projekcijaID.HasValue ?
                new ObjectParameter("ProjekcijaID", projekcijaID) :
                new ObjectParameter("ProjekcijaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("esp_Projekcije_GetCijena", projekcijaIDParameter);
        }
    
        public virtual ObjectResult<esp_Rezervacije_GetByClanID_Result> esp_Rezervacije_GetByClanID(Nullable<int> clanID)
        {
            var clanIDParameter = clanID.HasValue ?
                new ObjectParameter("ClanID", clanID) :
                new ObjectParameter("ClanID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Rezervacije_GetByClanID_Result>("esp_Rezervacije_GetByClanID", clanIDParameter);
        }
    
        public virtual ObjectResult<esp_Rezervacije_GetUkupnoByYear_Result> esp_Rezervacije_GetUkupnoByYear()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Rezervacije_GetUkupnoByYear_Result>("esp_Rezervacije_GetUkupnoByYear");
        }
    
        public virtual ObjectResult<Filmovi_GetByID_Result> esp_Filmovi_GetByID(Nullable<int> filmID)
        {
            var filmIDParameter = filmID.HasValue ?
                new ObjectParameter("FilmID", filmID) :
                new ObjectParameter("FilmID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Filmovi_GetByID_Result>("esp_Filmovi_GetByID", filmIDParameter);
        }
    
        public virtual int esp_Ocjene_Insert(Nullable<int> filmID, Nullable<int> clanID, Nullable<int> ocjena)
        {
            var filmIDParameter = filmID.HasValue ?
                new ObjectParameter("FilmID", filmID) :
                new ObjectParameter("FilmID", typeof(int));
    
            var clanIDParameter = clanID.HasValue ?
                new ObjectParameter("ClanID", clanID) :
                new ObjectParameter("ClanID", typeof(int));
    
            var ocjenaParameter = ocjena.HasValue ?
                new ObjectParameter("Ocjena", ocjena) :
                new ObjectParameter("Ocjena", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Ocjene_Insert", filmIDParameter, clanIDParameter, ocjenaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> esp_Filmovi_GetProsjek(Nullable<int> filmID)
        {
            var filmIDParameter = filmID.HasValue ?
                new ObjectParameter("FilmID", filmID) :
                new ObjectParameter("FilmID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("esp_Filmovi_GetProsjek", filmIDParameter);
        }
    
        public virtual ObjectResult<Usluge> esp_Usluge_GetByName(string naziv)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usluge>("esp_Usluge_GetByName", nazivParameter);
        }
    
        public virtual ObjectResult<Usluge> esp_Usluge_GetByName(string naziv, MergeOption mergeOption)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usluge>("esp_Usluge_GetByName", mergeOption, nazivParameter);
        }
    
        public virtual ObjectResult<esp_Rezervacije_GetAktivneByClanID_Result> esp_Rezervacije_GetAktivneByClanID(Nullable<int> clanID)
        {
            var clanIDParameter = clanID.HasValue ?
                new ObjectParameter("ClanID", clanID) :
                new ObjectParameter("ClanID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Rezervacije_GetAktivneByClanID_Result>("esp_Rezervacije_GetAktivneByClanID", clanIDParameter);
        }
    
        public virtual ObjectResult<esp_Rezervacije_GetProcesiraneByClanID_Result> esp_Rezervacije_GetProcesiraneByClanID(Nullable<int> clanID)
        {
            var clanIDParameter = clanID.HasValue ?
                new ObjectParameter("ClanID", clanID) :
                new ObjectParameter("ClanID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Rezervacije_GetProcesiraneByClanID_Result>("esp_Rezervacije_GetProcesiraneByClanID", clanIDParameter);
        }
    
        public virtual ObjectResult<esp_Rezervacije_GetKarte_Result> esp_Rezervacije_GetKarte(string korisnickoIme)
        {
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Rezervacije_GetKarte_Result>("esp_Rezervacije_GetKarte", korisnickoImeParameter);
        }
    
        public virtual ObjectResult<Filmovi_Zarada_Result> esp_Filmovi_SelectByZarada(Nullable<int> godina)
        {
            var godinaParameter = godina.HasValue ?
                new ObjectParameter("Godina", godina) :
                new ObjectParameter("Godina", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Filmovi_Zarada_Result>("esp_Filmovi_SelectByZarada", godinaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> esp_Projekcije_SelectByGodina()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("esp_Projekcije_SelectByGodina");
        }
    
        public virtual ObjectResult<esp_Rezervacije_GetDetails_Result> esp_Rezervacije_GetDetails(Nullable<int> rezervacijaID)
        {
            var rezervacijaIDParameter = rezervacijaID.HasValue ?
                new ObjectParameter("RezervacijaID", rezervacijaID) :
                new ObjectParameter("RezervacijaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Rezervacije_GetDetails_Result>("esp_Rezervacije_GetDetails", rezervacijaIDParameter);
        }
    
        public virtual ObjectResult<Sjedala> esp_Sjedala_GetByRezervacija(Nullable<int> rezervacijaID)
        {
            var rezervacijaIDParameter = rezervacijaID.HasValue ?
                new ObjectParameter("RezervacijaID", rezervacijaID) :
                new ObjectParameter("RezervacijaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sjedala>("esp_Sjedala_GetByRezervacija", rezervacijaIDParameter);
        }
    
        public virtual ObjectResult<Sjedala> esp_Sjedala_GetByRezervacija(Nullable<int> rezervacijaID, MergeOption mergeOption)
        {
            var rezervacijaIDParameter = rezervacijaID.HasValue ?
                new ObjectParameter("RezervacijaID", rezervacijaID) :
                new ObjectParameter("RezervacijaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sjedala>("esp_Sjedala_GetByRezervacija", mergeOption, rezervacijaIDParameter);
        }
    
        public virtual ObjectResult<esp_Rezervacije_GetKarte_Result> esp_Rezervacije_GetKartuByUlaznica(Nullable<int> ulaznicaID)
        {
            var ulaznicaIDParameter = ulaznicaID.HasValue ?
                new ObjectParameter("UlaznicaID", ulaznicaID) :
                new ObjectParameter("UlaznicaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Rezervacije_GetKarte_Result>("esp_Rezervacije_GetKartuByUlaznica", ulaznicaIDParameter);
        }
    
        public virtual ObjectResult<esp_Rezervacije_GetByKorisnickoIme_Result> esp_Rezervacije_GetByKorisnickoIme(string korisnickoIme)
        {
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Rezervacije_GetByKorisnickoIme_Result>("esp_Rezervacije_GetByKorisnickoIme", korisnickoImeParameter);
        }
    
        public virtual ObjectResult<esp_Filmovi_Search_Result> esp_Filmovi_Search(string naziv, Nullable<int> zanrID)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var zanrIDParameter = zanrID.HasValue ?
                new ObjectParameter("ZanrID", zanrID) :
                new ObjectParameter("ZanrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Filmovi_Search_Result>("esp_Filmovi_Search", nazivParameter, zanrIDParameter);
        }
    }
}
